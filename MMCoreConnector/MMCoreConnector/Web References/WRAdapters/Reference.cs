//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace MMCoreConnector.WRAdapters {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AdaptersEndpointBinding", Namespace="http://session.kernel.cmp.com/")]
    public partial class AdaptersService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processAuthenticationCertificateRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback processEtkRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback processEtkResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveCaAuthCertChainOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveCaAuthCertificateOperationCompleted;
        
        private System.Threading.SendOrPostCallback retrieveEtkOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AdaptersService() {
            this.Url = global::MMCoreConnector.Properties.Settings.Default.MMCoreConnector_WRAdapters_AdaptersService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processAuthenticationCertificateRequestCompletedEventHandler processAuthenticationCertificateRequestCompleted;
        
        /// <remarks/>
        public event processEtkRequestCompletedEventHandler processEtkRequestCompleted;
        
        /// <remarks/>
        public event processEtkResponseCompletedEventHandler processEtkResponseCompleted;
        
        /// <remarks/>
        public event retrieveCaAuthCertChainCompletedEventHandler retrieveCaAuthCertChainCompleted;
        
        /// <remarks/>
        public event retrieveCaAuthCertificateCompletedEventHandler retrieveCaAuthCertificateCompleted;
        
        /// <remarks/>
        public event retrieveEtkCompletedEventHandler retrieveEtkCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mproxyOperationStatus processAuthenticationCertificateRequest(string keyLabel, string pinCode, string certificateRequest) {
            object[] results = this.Invoke("processAuthenticationCertificateRequest", new object[] {
                        keyLabel,
                        pinCode,
                        certificateRequest});
            return ((mproxyOperationStatus)(results[0]));
        }
        
        /// <remarks/>
        public void processAuthenticationCertificateRequestAsync(string keyLabel, string pinCode, string certificateRequest) {
            this.processAuthenticationCertificateRequestAsync(keyLabel, pinCode, certificateRequest, null);
        }
        
        /// <remarks/>
        public void processAuthenticationCertificateRequestAsync(string keyLabel, string pinCode, string certificateRequest, object userState) {
            if ((this.processAuthenticationCertificateRequestOperationCompleted == null)) {
                this.processAuthenticationCertificateRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessAuthenticationCertificateRequestOperationCompleted);
            }
            this.InvokeAsync("processAuthenticationCertificateRequest", new object[] {
                        keyLabel,
                        pinCode,
                        certificateRequest}, this.processAuthenticationCertificateRequestOperationCompleted, userState);
        }
        
        private void OnprocessAuthenticationCertificateRequestOperationCompleted(object arg) {
            if ((this.processAuthenticationCertificateRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processAuthenticationCertificateRequestCompleted(this, new processAuthenticationCertificateRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mproxyOperationStatus processEtkRequest(string keyLabel, string authenticationCertificate, string encodingCertificate) {
            object[] results = this.Invoke("processEtkRequest", new object[] {
                        keyLabel,
                        authenticationCertificate,
                        encodingCertificate});
            return ((mproxyOperationStatus)(results[0]));
        }
        
        /// <remarks/>
        public void processEtkRequestAsync(string keyLabel, string authenticationCertificate, string encodingCertificate) {
            this.processEtkRequestAsync(keyLabel, authenticationCertificate, encodingCertificate, null);
        }
        
        /// <remarks/>
        public void processEtkRequestAsync(string keyLabel, string authenticationCertificate, string encodingCertificate, object userState) {
            if ((this.processEtkRequestOperationCompleted == null)) {
                this.processEtkRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessEtkRequestOperationCompleted);
            }
            this.InvokeAsync("processEtkRequest", new object[] {
                        keyLabel,
                        authenticationCertificate,
                        encodingCertificate}, this.processEtkRequestOperationCompleted, userState);
        }
        
        private void OnprocessEtkRequestOperationCompleted(object arg) {
            if ((this.processEtkRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processEtkRequestCompleted(this, new processEtkRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mproxyOperationStatus processEtkResponse(string keyLabel, string ETK) {
            object[] results = this.Invoke("processEtkResponse", new object[] {
                        keyLabel,
                        ETK});
            return ((mproxyOperationStatus)(results[0]));
        }
        
        /// <remarks/>
        public void processEtkResponseAsync(string keyLabel, string ETK) {
            this.processEtkResponseAsync(keyLabel, ETK, null);
        }
        
        /// <remarks/>
        public void processEtkResponseAsync(string keyLabel, string ETK, object userState) {
            if ((this.processEtkResponseOperationCompleted == null)) {
                this.processEtkResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessEtkResponseOperationCompleted);
            }
            this.InvokeAsync("processEtkResponse", new object[] {
                        keyLabel,
                        ETK}, this.processEtkResponseOperationCompleted, userState);
        }
        
        private void OnprocessEtkResponseOperationCompleted(object arg) {
            if ((this.processEtkResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processEtkResponseCompleted(this, new processEtkResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] retrieveCaAuthCertChain() {
            object[] results = this.Invoke("retrieveCaAuthCertChain", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void retrieveCaAuthCertChainAsync() {
            this.retrieveCaAuthCertChainAsync(null);
        }
        
        /// <remarks/>
        public void retrieveCaAuthCertChainAsync(object userState) {
            if ((this.retrieveCaAuthCertChainOperationCompleted == null)) {
                this.retrieveCaAuthCertChainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveCaAuthCertChainOperationCompleted);
            }
            this.InvokeAsync("retrieveCaAuthCertChain", new object[0], this.retrieveCaAuthCertChainOperationCompleted, userState);
        }
        
        private void OnretrieveCaAuthCertChainOperationCompleted(object arg) {
            if ((this.retrieveCaAuthCertChainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveCaAuthCertChainCompleted(this, new retrieveCaAuthCertChainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mproxyOperationStatus retrieveCaAuthCertificate() {
            object[] results = this.Invoke("retrieveCaAuthCertificate", new object[0]);
            return ((mproxyOperationStatus)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveCaAuthCertificateAsync() {
            this.retrieveCaAuthCertificateAsync(null);
        }
        
        /// <remarks/>
        public void retrieveCaAuthCertificateAsync(object userState) {
            if ((this.retrieveCaAuthCertificateOperationCompleted == null)) {
                this.retrieveCaAuthCertificateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveCaAuthCertificateOperationCompleted);
            }
            this.InvokeAsync("retrieveCaAuthCertificate", new object[0], this.retrieveCaAuthCertificateOperationCompleted, userState);
        }
        
        private void OnretrieveCaAuthCertificateOperationCompleted(object arg) {
            if ((this.retrieveCaAuthCertificateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveCaAuthCertificateCompleted(this, new retrieveCaAuthCertificateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://session.kernel.cmp.com/", ResponseNamespace="http://session.kernel.cmp.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        [return: System.Xml.Serialization.XmlElementAttribute("return")]
        public mproxyOperationStatus retrieveEtk(string keyLabel) {
            object[] results = this.Invoke("retrieveEtk", new object[] {
                        keyLabel});
            return ((mproxyOperationStatus)(results[0]));
        }
        
        /// <remarks/>
        public void retrieveEtkAsync(string keyLabel) {
            this.retrieveEtkAsync(keyLabel, null);
        }
        
        /// <remarks/>
        public void retrieveEtkAsync(string keyLabel, object userState) {
            if ((this.retrieveEtkOperationCompleted == null)) {
                this.retrieveEtkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnretrieveEtkOperationCompleted);
            }
            this.InvokeAsync("retrieveEtk", new object[] {
                        keyLabel}, this.retrieveEtkOperationCompleted, userState);
        }
        
        private void OnretrieveEtkOperationCompleted(object arg) {
            if ((this.retrieveEtkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.retrieveEtkCompleted(this, new retrieveEtkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://session.kernel.cmp.com/")]
    public partial class mproxyOperationStatus {
        
        private string detailedInfoField;
        
        private string operationOutputValueField;
        
        private mproxyOperationResult operationResultField;
        
        private bool operationResultFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string detailedInfo {
            get {
                return this.detailedInfoField;
            }
            set {
                this.detailedInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string operationOutputValue {
            get {
                return this.operationOutputValueField;
            }
            set {
                this.operationOutputValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public mproxyOperationResult operationResult {
            get {
                return this.operationResultField;
            }
            set {
                this.operationResultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool operationResultSpecified {
            get {
                return this.operationResultFieldSpecified;
            }
            set {
                this.operationResultFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://session.kernel.cmp.com/")]
    public enum mproxyOperationResult {
        
        /// <remarks/>
        MPROXY_RESULT_OK,
        
        /// <remarks/>
        MPROXY_RESULT_FAILED,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void processAuthenticationCertificateRequestCompletedEventHandler(object sender, processAuthenticationCertificateRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processAuthenticationCertificateRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processAuthenticationCertificateRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mproxyOperationStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mproxyOperationStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void processEtkRequestCompletedEventHandler(object sender, processEtkRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processEtkRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processEtkRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mproxyOperationStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mproxyOperationStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void processEtkResponseCompletedEventHandler(object sender, processEtkResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processEtkResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processEtkResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mproxyOperationStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mproxyOperationStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void retrieveCaAuthCertChainCompletedEventHandler(object sender, retrieveCaAuthCertChainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveCaAuthCertChainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveCaAuthCertChainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void retrieveCaAuthCertificateCompletedEventHandler(object sender, retrieveCaAuthCertificateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveCaAuthCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveCaAuthCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mproxyOperationStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mproxyOperationStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void retrieveEtkCompletedEventHandler(object sender, retrieveEtkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class retrieveEtkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal retrieveEtkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public mproxyOperationStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((mproxyOperationStatus)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591